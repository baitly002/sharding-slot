<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rlynic.sharding.slot.example.repositories.sharding.OrderItemRepository">
    <resultMap id="baseResultMap" type="com.rlynic.sharding.slot.example.entities.OrderItem">
        <result column="order_item_id" property="orderItemId" jdbcType="INTEGER"/>
        <result column="order_id" property="orderId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
    </resultMap>
    
    <update id="createTableIfNotExists">
        CREATE TABLE IF NOT EXISTS t_order_item (order_item_id BIGINT AUTO_INCREMENT, order_id BIGINT, user_id INT NOT NULL, status VARCHAR(50) , slot INT NULL, PRIMARY KEY (order_item_id));
    </update>
    
    <update id="truncateTable">
        TRUNCATE TABLE t_order_item;
    </update>
    
    <update id="dropTable">
        DROP TABLE IF EXISTS t_order_item;
    </update>

    <insert id="insert" useGeneratedKeys="true" keyProperty="orderItemId">
        INSERT INTO t_order_item (order_id, user_id, status) VALUES (#{orderId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR});
    </insert>
    
    <delete id="delete">
        DELETE FROM t_order_item WHERE order_id = #{orderId,jdbcType=INTEGER};
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_order_item;
    </delete>

    
    <select id="selectAll" resultMap="baseResultMap">
        SELECT i.* FROM t_order o, t_order_item i WHERE o.order_id = i.order_id;
    </select>

    <select id="selectInIds" resultMap="baseResultMap">
        SELECT * FROM t_order_item WHERE order_id in
        <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <select id="selectInIdsStatic" resultMap="baseResultMap">
        SELECT * FROM t_order_item WHERE order_id in
        <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
            (#{id})
        </foreach>
    </select>

    <select id="selectInIdsStaticForBracket" resultMap="baseResultMap">
        SELECT * FROM t_order_item WHERE (order_id) in
        <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
            (#{id})
        </foreach>
        for update;
    </select>

    <select id="selectInIdsStaticForUpdate" resultMap="baseResultMap">
        SELECT * FROM t_order_item WHERE order_id in
        <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
            (#{id})
        </foreach>
        for update;
    </select>

    <insert id="replaceIntoSingle">
        replace into t_order_item (order_item_id, order_id, user_id, status) values
        (#{orderItemId}, #{orderId}, #{userId}, #{status})
    </insert>

    <insert id="replaceIntoList">
        replace into t_order_item (order_item_id, order_id, user_id, status) values
        <foreach item="i" index="index" collection="items" open="" separator="," close="">
            (#{i.orderItemId}, #{i.orderId}, #{i.userId}, #{i.status})
        </foreach>
    </insert>

    <select id="selectInIdsAlias" resultMap="baseResultMap">
        SELECT * FROM t_order_item i WHERE i.order_id in
        <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <select id="selectManyInIds" resultMap="baseResultMap">
        SELECT * FROM t_order_item i WHERE i.order_id in
        <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
        and
        i.order_item_id in
        <foreach item="iid" index="index" collection="iids" open="(" separator="," close=")">
            #{iid}
        </foreach>
    </select>
    <select id="selectManyNotInIds" resultMap="baseResultMap">
        SELECT * FROM t_order_item i WHERE i.order_id not in
        <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
        and
        i.order_item_id in
        <foreach item="iid" index="index" collection="iids" open="(" separator="," close=")">
            #{iid}
        </foreach>
    </select>
    <select id="selectManyTableInIds" resultMap="baseResultMap">
        SELECT * FROM t_order_item i, t_order o WHERE i.order_id in
        <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
        and
        o.order_id in
        <foreach item="oid" index="index" collection="oids" open="(" separator="," close=")">
            #{oid}
        </foreach>
    </select>


<!--    <select id="selectInIds" resultMap="baseResultMap">-->
<!--        SELECT i.* FROM t_order o, t_order_item i WHERE o.order_id = i.order_id and i.order_item_id in-->
<!--        <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">-->
<!--            #{id}-->
<!--        </foreach>-->
<!--    </select>-->

    <select id="selectIn" resultMap="baseResultMap">
        SELECT i.* FROM t_order o, t_order_item i WHERE o.order_id = i.order_id and i.order_id in (840637597557456896, 840637598182408192, 840637599944015872);
    </select>

    <select id="selectInStatic" resultMap="baseResultMap">
        SELECT i.* FROM t_order o, t_order_item i WHERE o.order_id = i.order_id and i.order_id in ((840637597557456896), (840637598182408192), (840637599944015872));
    </select>
    
    <select id="selectRange" resultMap="baseResultMap">
        SELECT i.* FROM t_order o, t_order_item i WHERE o.order_id = i.order_id AND o.user_id BETWEEN 1 AND 5
    </select>
</mapper>
